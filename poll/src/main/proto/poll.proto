syntax = "proto3";

import "annotations.proto";

package poll;

service PollService {
  rpc createPoll(CreatePollRequest) returns (PollResponse){
    option (google.api.http) = {
      post: "/api/v1/poll"
      body: "*"
    };
  };
  rpc updatePoll(UpdatePollRequest) returns (Empty);
  rpc addQuestion(AddQuestionRequest) returns (Empty);
  rpc getActivePolls(Empty) returns (GetActivePollsResponse);

  rpc startPoll(StartPollRequest) returns (PollResponse);
  rpc closePoll(RequestWithPollId) returns (PollResponse);
  rpc getPollStatus(RequestWithPollId) returns (PollStatusResponse);
  rpc payForPoll(PayForPollRequest) returns (PollResponse);
}

message Empty {}

message PollInfo {
  string title = 1;
  string description = 2;
  map<string, string> preferences = 3;
  int32 remainingVoters = 4;
}

message GetActivePollsResponse {
  repeated PollInfo polls = 1;
}

message CreatePollRequest {
  optional string title = 1;
  optional string description = 2;
}

message UpdatePollRequest {
  string pollId = 1;
  optional int32 maxVoters = 2;
  map<string, string> preferences = 3;
  optional string title = 4;
  optional string description = 5;
}
message AddQuestionRequest {
  string pollId = 1;
  string questionText = 2;
  QuestionType questionType = 3;
  repeated string options = 4;
  bool shouldAnswer = 5;
}
message StartPollRequest {
  string pollId = 1;
  optional string startTime = 2;
  optional string endTime = 3;
}
message RequestWithPollId {
  string pollId = 1;
}

message PayForPollRequest {
  string pollId = 1;
  PaymentMode mode = 2;
}

message PollResponse {
  string pollId = 1;
  PollStatus status = 2;
}

message PollStatusResponse {
  string pollId = 1;
  PollStatus status = 2;
  int32 votesCount = 3;
  string startTime = 4;
  string endTime = 5;
  int32 maxVoters = 6;
}

enum QuestionType {
EXPLAIN =0;
TWO_OPTION=1;
MULTIPLE_CHOICE=2;
}
enum PollStatus { DRAFT = 0; SCHEDULED = 1; ACTIVE = 2; CLOSED = 3; }
enum PaymentMode { PAY_BEFORE = 0; PAY_DURING = 1; PAY_LATER = 2; }
